// <auto-generated />
using HodelManagement.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HodelManagement.Migrations
{
    [DbContext(typeof(HotelContext))]
    partial class HotelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HodelManagement.Entity.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerId");

                    b.Property<DateTimeOffset?>("DateFrom");

                    b.Property<DateTimeOffset?>("DateTo");

                    b.Property<int?>("RoomId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HodelManagement.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerId");

                    b.Property<string>("FistName");

                    b.Property<bool>("IsPrimary");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("HodelManagement.Entity.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Link");

                    b.Property<int?>("RoomId");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("HodelManagement.Entity.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<decimal?>("Price");

                    b.Property<int?>("RoomId");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("HodelManagement.Entity.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BlockEnd");

                    b.Property<DateTime>("BlockFrom");

                    b.Property<string>("Code");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HodelManagement.Entity.Services", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int?>("RoomId");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Serviceses");
                });

            modelBuilder.Entity("HodelManagement.Entity.Booking", b =>
                {
                    b.HasOne("HodelManagement.Entity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("HodelManagement.Entity.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("HodelManagement.Entity.Customer", b =>
                {
                    b.HasOne("HodelManagement.Entity.Customer")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("HodelManagement.Entity.Image", b =>
                {
                    b.HasOne("HodelManagement.Entity.Room")
                        .WithMany("Image")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("HodelManagement.Entity.Inventory", b =>
                {
                    b.HasOne("HodelManagement.Entity.Room", "Room")
                        .WithMany("Inventories")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("HodelManagement.Entity.Services", b =>
                {
                    b.HasOne("HodelManagement.Entity.Room", "Room")
                        .WithMany("Serviceses")
                        .HasForeignKey("RoomId");
                });
#pragma warning restore 612, 618
        }
    }
}
